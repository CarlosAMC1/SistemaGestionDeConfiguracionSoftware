@model SistemaGestionDeConfiguracionSoftware.Models.CRONOGRAMA

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>CRONOGRAMA</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID_CRONOGRAMA)

    <div class="form-group">
        @Html.LabelFor(model => model.ID_PROYECTO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ID_PROYECTO, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ID_PROYECTO, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PORCENTAJE_AVANCE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PORCENTAJE_AVANCE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PORCENTAJE_AVANCE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FECHA_INICIO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FECHA_INICIO, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FECHA_INICIO, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FECHA_FIN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FECHA_FIN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FECHA_FIN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TAREA_FINALIZADA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TAREA_FINALIZADA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TAREA_FINALIZADA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TAREA_ENPROCESO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TAREA_ENPROCESO, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TAREA_ENPROCESO, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TAREA_ABIERTA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TAREA_ABIERTA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TAREA_ABIERTA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ID_METODOLOGIA, "ID_METODOLOGIA", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ID_METODOLOGIA", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ID_METODOLOGIA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ID_FASE, "ID_FASE", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ID_FASE", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ID_FASE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.VERSION_ACTUAL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VERSION_ACTUAL, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VERSION_ACTUAL, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ECS, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ECS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ECS, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ID_MIEMBRO, "ID_MIEMBRO", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ID_MIEMBRO", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ID_MIEMBRO, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">Cerrar</button>
        <button type="submit" class="btn btn-custom waves-effect waves-light">Guardar Cambios</button>
    </div>
</div>
}


